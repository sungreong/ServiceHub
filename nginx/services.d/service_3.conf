
location /api/3/ {
    # JWT 인증 추가
    auth_request /auth;
    auth_request_set $auth_status $upstream_status;
    auth_request_set $auth_user $upstream_http_x_user;

    # 인증 실패시 401 리턴
    error_page 401 = @error401;
    
    proxy_pass http://210.116.106.102:8501/;
    proxy_set_header Host 210.116.106.102:8501;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Authorization $http_authorization;  # Authorization 헤더 전달
    
    # Content-Type 헤더 추가
    proxy_set_header Accept "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
    
    # CORS 설정
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' '*' always;
    
    # OPTIONS 요청 처리 (CORS preflight)
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    
    # 웹소켓 지원
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # 버퍼 설정
    proxy_buffers 8 32k;
    proxy_buffer_size 64k;
    
    # 타임아웃 설정
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
}

# 인증 실패시 처리할 location
location @error401 {
    add_header 'Access-Control-Allow-Origin' '*' always;
    return 401 '{"error": "Authentication required"}';
} 